
R Under development (unstable) (2024-01-29 r85841 ucrt) -- "Unsuffered Consequences"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##  VT::11.10.2023 - this will render the output independent
> ##  from the version of the package
> suppressPackageStartupMessages(library(tclust))
> 
> require(tclust)
> require(MASS)
Loading required package: MASS
> #--- EXAMPLE 1 ------------------------------------------
> 
> set.seed(123)
> sig <- diag (2)
> cen <- rep (1,2)
> x <- rbind(MASS::mvrnorm(360, cen * 0,   sig),
+            MASS::mvrnorm(540, cen * 5,   sig * 6 - 2),
+            MASS::mvrnorm(100, cen * 2.5, sig * 50)
+            )
> 
> # Two groups and 10% trimming level
> (clus <- tclust(x, k = 2, alpha = 0.1, restr.fact = 8))
* Results for TCLUST algorithm: *
trim = 0.1, k = 2
Classification (trimmed points are indicated by 0 ):
   [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [38] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [112] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [149] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [186] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [223] 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [260] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [297] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [334] 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
 [371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [408] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [445] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [482] 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1
 [519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1
 [556] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [667] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [704] 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1
 [741] 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1
 [778] 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1
 [815] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [852] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [889] 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 2 0 2 0 1 0 0 0 0 0 1
 [926] 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0
 [963] 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 2 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 2 2 2
[1000] 1
Means:
         C 1        C 2
X 1 4.984845 0.02269302
X 2 4.929012 0.03215462

Trimmed objective function:  -3747.378 
Selected restriction factor: 8 
> 
> 
> # Three groups (one of them very scattered) and 0% trimming level
> (clus <- tclust(x, k = 3, alpha=0.0, restr.fact = 100))
* Results for TCLUST algorithm: *
trim = 0, k = 3
Classification (trimmed points are indicated by 0 ):
   [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [38] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [112] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [149] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [186] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [223] 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [260] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [297] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [334] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1
 [371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [408] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [445] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [556] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [667] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [704] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [741] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [778] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [815] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [852] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [889] 1 1 1 1 1 1 1 1 1 1 1 1 3 3 1 3 3 3 3 1 1 3 3 1 3 2 2 3 2 3 1 3 3 3 3 3 1
 [926] 3 3 3 2 3 1 3 3 3 2 3 3 3 3 3 3 3 3 1 1 3 1 3 1 3 3 3 3 3 3 1 3 1 1 3 3 3
 [963] 3 3 3 3 3 3 3 1 3 3 1 3 3 3 3 3 1 3 2 3 1 3 3 1 1 3 1 3 3 3 1 1 3 3 2 2 2
[1000] 1
Means:
         C 1        C 2      C 3
X 1 4.889052 0.02676419 1.229842
X 2 5.055564 0.04517830 2.340643

Trimmed objective function:  -4731.715 
Selected restriction factor: 100 
> 
> 
> #--- EXAMPLE 2 ------------------------------------------
> data(geyser2)
> set.seed(123)
> (clus <- tclust(geyser2, k=3, alpha=0.03))
* Results for TCLUST algorithm: *
trim = 0.03, k = 3
Classification (trimmed points are indicated by 0 ):
  [1] 1 0 1 3 2 2 2 1 3 1 3 2 1 3 1 0 3 1 3 1 0 0 0 2 2 1 3 2 2 2 2 2 2 2 1 0 3
 [38] 1 3 2 1 3 1 3 2 2 1 3 1 3 2 1 3 1 3 2 1 3 2 1 3 1 3 1 3 2 2 1 3 2 1 3 2 1
 [75] 3 1 3 2 2 2 2 2 1 3 2 2 2 1 3 1 3 1 3 1 3 2 2 1 3 1 3 1 3 2 1 3 1 3 2 2 1
[112] 3 2 1 3 1 3 1 3 1 3 2 1 3 2 1 3 1 3 1 3 1 2 1 3 1 3 1 3 2 1 3 2 2 1 3 1 3
[149] 1 3 2 1 3 2 2 2 2 1 3 1 3 1 3 2 2 1 3 1 3 1 0 3 2 2 2 2 1 3 2 1 3 2 2 1 3
[186] 2 1 3 1 3 1 3 2 2 2 2 2 1 3 1 3 2 1 3 1 3 2 1 3 1 3 1 3 2 2 1 3 1 3 1 3 1
[223] 3 2 2 2 2 2 2 2 1 3 1 3 1 0 3 2 1 3 1 3 2 2 2 1 3 1 3 1 3 2 2 2 2 2 2 1 3
[260] 2 2 1 3 1 0 3 2 1 3 1 3
Means:
                              C 1      C 2      C 3
Eruption length          4.340629 4.199207 2.020919
Previous eruption length 2.026584 4.093862 4.501721

Trimmed objective function:  -441.7624 
Selected restriction factor: 12 
> plot(clus)
>  
> #--- EXAMPLE 3 ------------------------------------------
> data (M5data)
> set.seed(123)
> x <- M5data[, 1:2]
> 
> (clus.a <- tclust(x, k=3, alpha=0.1, restr.fact=1,
+                   restr = "eigen", equal.weights=TRUE))
* Results for TCLUST algorithm: *
trim = 0.1, k = 3
Classification (trimmed points are indicated by 0 ):
   [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [38] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [112] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [149] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [186] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [223] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [260] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [297] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [334] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 2 3 1 2 3 3 1
 [371] 3 3 0 3 3 3 3 3 3 2 2 3 3 3 3 3 1 2 3 3 3 3 3 3 1 3 2 3 3 3 3 3 2 0 3 3 3
 [408] 3 3 2 3 3 3 3 3 2 2 3 1 3 3 1 2 3 3 3 3 3 2 3 2 3 1 2 1 3 3 3 3 2 3 3 2 1
 [445] 2 0 1 3 3 3 3 1 3 0 3 3 2 3 3 3 3 2 3 3 2 2 2 3 3 3 2 3 3 2 2 2 3 2 3 3 2
 [482] 2 3 3 3 3 3 3 3 2 3 3 3 2 1 2 3 3 3 2 3 3 3 3 3 1 3 3 2 0 3 3 3 0 0 2 3 3
 [519] 3 3 3 3 1 3 3 1 3 2 3 3 1 3 3 3 3 2 2 1 2 3 2 2 3 2 3 2 3 3 3 3 3 3 3 3 3
 [556] 3 3 3 2 3 3 3 1 3 3 3 2 1 3 0 3 2 1 3 2 3 3 0 2 3 3 2 3 3 0 3 3 3 3 1 0 2
 [593] 1 3 3 3 2 2 3 3 1 3 3 3 3 2 3 2 3 3 3 3 1 3 3 3 3 3 3 2 2 1 3 3 3 3 3 1 3
 [630] 3 3 2 3 3 2 3 3 3 3 2 3 0 3 1 3 2 2 3 3 3 2 0 1 3 3 3 3 3 3 2 3 3 0 3 3 3
 [667] 3 3 3 3 3 3 0 3 0 1 2 3 2 1 3 1 3 3 3 3 3 3 2 3 3 0 2 2 2 3 3 3 2 3 3 3 2
 [704] 3 2 1 3 2 3 3 0 3 3 2 3 2 3 2 3 3 3 2 3 0 2 2 3 2 0 3 3 3 3 2 3 3 3 2 2 1
 [741] 2 3 3 2 0 3 3 3 3 3 3 3 3 3 3 1 3 3 2 3 2 3 3 3 2 3 3 3 3 3 3 3 3 3 2 2 3
 [778] 3 3 3 2 3 3 2 3 3 3 0 3 3 2 1 3 3 2 3 3 2 3 1 2 2 0 3 2 3 2 3 3 2 3 0 3 3
 [815] 3 3 3 3 1 3 3 3 3 0 0 3 3 2 3 3 2 3 2 2 1 3 2 3 3 2 2 3 3 2 2 2 2 3 3 3 3
 [852] 3 3 3 3 0 2 3 3 3 3 3 2 0 1 3 2 2 3 3 3 3 3 2 3 3 3 3 3 3 2 2 3 2 3 3 1 3
 [889] 3 3 2 3 3 2 3 3 3 3 3 2 3 3 3 2 3 2 3 2 2 0 3 2 2 1 3 2 3 3 3 3 0 3 3 3 2
 [926] 3 3 3 2 1 1 3 2 3 2 3 3 3 3 2 3 1 3 3 3 3 3 3 2 2 3 3 0 2 2 3 2 2 3 1 3 2
 [963] 3 2 2 3 3 3 2 3 3 3 3 0 3 3 3 2 3 3 0 0 2 0 0 3 1 3 3 3 3 2 2 3 3 3 3 1 3
[1000] 2 3 3 3 1 2 3 2 3 2 3 2 1 1 3 3 3 3 3 3 3 3 2 3 2 3 3 3 2 3 3 3 3 3 2 2 2
[1037] 2 3 3 2 1 3 3 3 3 2 3 3 1 3 2 3 3 3 0 1 3 3 2 3 3 3 3 3 3 3 3 0 3 3 3 3 3
[1074] 2 3 2 3 3 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1111] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1148] 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1185] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1222] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1259] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1296] 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1333] 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1370] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1407] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1444] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1481] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1
[1518] 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1555] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1592] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1629] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1666] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1703] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1740] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1777] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 2 0 1 0 0 0 0 0 0
[1814] 0 2 0 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2 0 0 0 1 1 2 0 0 0 2 0 0 2 0 0 0 0
[1851] 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0
[1888] 2 1 2 0 0 0 0 0 0 1 0 0 0 0 0 0 2 2 1 0 0 0 0 0 0 0 2 0 0 0 0 1 1 2 0 0 0
[1925] 0 1 1 1 0 1 1 1 0 0 0 1 0 2 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0
[1962] 0 0 2 0 0 0 0 0 0 2 0 1 0 0 0 0 0 1 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0
[1999] 0 0
Means:
        C 1       C 2       C 3
x -7.668093 0.4306593 10.601334
y -8.452901 7.3212665 -1.064244

Trimmed objective function:  -11653.66 
Selected restriction factor: 1 
> (clus.b <- tclust(x, k=3, alpha=0.1, restr.fact=50,
+                     restr="eigen", equal.weights=TRUE))
* Results for TCLUST algorithm: *
trim = 0.1, k = 3
Classification (trimmed points are indicated by 0 ):
   [1] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
  [38] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
  [75] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [112] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [149] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [186] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [223] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [260] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [297] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [334] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2
 [371] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [408] 2 2 2 2 2 2 2 2 2 3 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 1 3 2 2 2 2 2 2 2 2 2 1
 [445] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [482] 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2
 [519] 2 2 2 2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 0 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [556] 2 2 2 3 2 2 2 1 2 2 2 2 2 2 2 2 2 1 2 2 2 2 0 2 2 2 2 2 2 0 2 2 2 2 2 2 2
 [593] 1 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2
 [630] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [667] 2 2 2 2 2 2 2 2 0 2 2 2 3 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2
 [704] 2 2 1 2 2 2 2 0 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 1
 [741] 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 0 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2
 [778] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 0 2 2
 [815] 2 2 2 2 2 2 2 2 2 0 0 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [852] 2 2 2 2 2 3 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2
 [889] 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 0 2 2 2 3
 [926] 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0
 [963] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2
[1000] 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 0 2 2
[1037] 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2
[1074] 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1111] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1148] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1185] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1222] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1259] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1296] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1333] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1370] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1407] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1444] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1481] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1
[1518] 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1555] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1592] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1629] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1666] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1703] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1
[1740] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1777] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0
[1814] 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0
[1851] 0 1 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
[1888] 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0
[1925] 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 2 0 0 2 0 0 0 0 0 0 0 1 0 0
[1962] 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0
[1999] 0 0
Means:
        C 1        C 2        C 3
x -7.991128  8.7332304 0.04397704
y -8.363079 -0.1615814 7.92670007

Trimmed objective function:  -11019.84 
Selected restriction factor: 50 
> (clus.c <- tclust(x, k=3, alpha=0.1, restr.fact=1,
+                     restr="deter", equal.weights=TRUE))
* Results for TCLUST algorithm: *
trim = 0.1, k = 3
Classification (trimmed points are indicated by 0 ):
   [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [38] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [112] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [149] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [186] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [223] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [260] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [297] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [334] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 3 2 3 1 2 3 3 1
 [371] 3 3 0 3 3 3 3 2 3 2 2 3 3 3 3 3 1 2 3 3 3 3 3 3 0 3 2 3 3 3 3 3 2 0 3 3 3
 [408] 3 3 2 3 3 3 3 3 3 2 3 3 3 3 1 2 3 3 3 3 3 2 3 2 3 1 2 3 3 3 3 3 2 3 2 2 1
 [445] 2 0 3 3 3 3 3 1 3 0 3 3 2 3 2 2 3 2 3 3 2 2 2 3 3 2 2 3 3 2 2 2 3 2 2 3 2
 [482] 2 3 3 3 3 3 3 3 2 3 3 3 2 3 2 3 3 3 2 3 3 3 3 3 3 3 3 2 2 3 3 3 0 3 2 3 3
 [519] 3 3 3 3 1 3 3 1 3 3 3 3 3 3 3 3 3 2 2 3 2 3 2 2 3 2 3 2 3 2 3 3 3 2 3 3 2
 [556] 3 2 3 2 3 3 3 1 3 3 3 2 3 3 0 3 2 1 3 2 3 3 0 2 3 3 2 3 2 0 3 3 3 0 3 3 2
 [593] 1 3 3 2 2 2 3 3 3 3 3 2 3 2 3 2 3 3 3 3 1 3 3 3 3 3 3 2 3 1 3 3 3 3 3 3 3
 [630] 3 3 2 3 3 2 3 3 3 3 2 3 0 3 0 3 2 2 3 3 3 3 0 3 3 3 3 3 3 3 3 3 3 0 3 3 3
 [667] 3 3 3 3 3 3 0 2 0 3 2 2 2 3 3 1 3 3 3 3 3 2 2 3 3 0 2 2 2 3 3 2 2 3 3 3 2
 [704] 2 2 1 3 2 2 3 0 3 3 2 3 2 3 2 3 3 3 2 3 0 2 2 3 2 0 3 3 2 3 2 3 2 2 2 2 1
 [741] 2 3 3 2 0 3 3 3 3 3 3 3 3 3 3 1 3 3 2 3 2 3 3 3 2 3 3 2 3 3 3 3 3 3 2 2 3
 [778] 3 3 0 2 3 3 2 3 3 3 0 3 3 2 1 3 2 2 3 3 2 3 3 2 2 3 3 2 3 2 3 3 2 3 0 0 3
 [815] 3 2 3 3 3 3 2 3 3 0 0 2 3 2 3 3 3 3 2 2 1 3 2 3 2 2 2 3 2 2 0 2 2 3 3 3 3
 [852] 3 3 2 3 1 2 3 3 3 3 3 2 0 1 3 2 2 3 3 3 3 3 2 3 3 3 3 3 2 2 2 3 2 3 3 3 3
 [889] 3 3 2 2 3 2 3 3 2 0 3 2 3 3 2 2 3 2 3 2 2 0 3 2 2 3 3 2 3 3 3 3 0 3 3 3 2
 [926] 2 3 2 2 3 1 3 2 3 2 3 3 3 3 2 0 1 2 3 3 3 3 2 2 2 3 2 3 2 2 3 2 2 3 1 0 2
 [963] 3 2 2 3 3 2 2 3 3 3 3 0 3 3 3 2 3 0 0 0 3 1 0 3 1 3 3 2 3 2 2 3 3 3 3 3 3
[1000] 2 3 3 3 1 2 3 2 2 2 3 2 1 1 3 3 3 3 3 2 3 3 2 3 2 3 2 3 2 3 3 3 3 3 2 2 2
[1037] 2 3 3 2 3 3 3 3 2 2 3 2 1 3 2 3 3 3 0 1 3 2 2 3 3 3 3 3 2 3 3 0 3 3 2 3 3
[1074] 2 3 2 2 2 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1111] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1148] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1185] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1222] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1259] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1296] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1333] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1370] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1407] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1444] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1481] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1
[1518] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1555] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1592] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1629] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1666] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1703] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1
[1740] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1777] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 2 0 0 0 1 0 0 0 0 0 0
[1814] 0 0 0 0 1 0 0 0 0 0 0 0 2 0 1 0 0 0 1 2 0 0 0 0 0 2 0 1 0 2 0 0 2 0 0 0 0
[1851] 0 1 0 1 0 1 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0
[1888] 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 1 2 0 0 2
[1925] 0 1 1 1 0 0 0 1 0 0 0 1 0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 0 0 1 0 0
[1962] 0 0 2 0 0 0 0 0 0 2 0 0 0 1 0 0 0 1 0 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0
[1999] 0 1
Means:
        C 1      C 2       C 3
x -7.943760 1.206417 10.128105
y -8.290743 7.214851 -1.896668

Trimmed objective function:  -11472.75 
Selected restriction factor: 1 
> (clus.d <- tclust(x, k=3, alpha=0.1, restr.fact=50,
+                     restr="eigen", equal.weights=FALSE))
* Results for TCLUST algorithm: *
trim = 0.1, k = 3
Classification (trimmed points are indicated by 0 ):
   [1] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
  [38] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
  [75] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [112] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [149] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [186] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [223] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [260] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [297] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
 [334] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2
 [371] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [408] 2 2 2 2 2 2 2 2 2 3 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 1 3 2 2 2 2 2 2 2 2 2 1
 [445] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [482] 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2
 [519] 2 2 2 2 1 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 0 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [556] 2 2 2 3 2 2 2 1 2 2 2 2 2 2 2 2 2 1 2 2 2 2 0 2 2 2 2 2 2 0 2 2 2 2 2 2 2
 [593] 1 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2
 [630] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [667] 2 2 2 2 2 2 2 2 0 2 2 2 3 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2
 [704] 2 2 1 2 2 2 2 0 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 1
 [741] 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 0 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2
 [778] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 0 2 2
 [815] 2 2 2 2 2 2 2 2 2 0 0 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [852] 2 2 2 2 2 3 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2
 [889] 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 0 2 2 2 3
 [926] 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0
 [963] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2
[1000] 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 0 2 2 2 2 2 2 2 2 2 0 2 2
[1037] 2 2 2 2 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2
[1074] 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1111] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1148] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1185] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1222] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1259] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1296] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1333] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1370] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1407] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1444] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1481] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1
[1518] 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1555] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1592] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1629] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1666] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1703] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1
[1740] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
[1777] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0
[1814] 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0
[1851] 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0
[1888] 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0
[1925] 0 1 1 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0
[1962] 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0
[1999] 0 0
Means:
        C 1        C 2        C 3
x -8.001393  8.6605632 0.04397704
y -8.360821 -0.1056621 7.92670007

Trimmed objective function:  -11200.97 
Selected restriction factor: 50 
> 
> #--- EXAMPLE 4 ------------------------------------------
> data (swissbank)
> set.seed(123)
> # Two clusters and 8% trimming level
> (clus <- tclust(swissbank, k = 2, alpha = 0.08, restr.fact = 50))
* Results for TCLUST algorithm: *
trim = 0.08, k = 2
Classification (trimmed points are indicated by 0 ):
  [1] 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [38] 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1
 [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 1
[112] 2 2 2 2 1 2 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 0
[149] 2 2 2 2 2 2 2 2 2 2 2 0 0 0 2 2 2 2 0 0 2 2 0 2 2 2 2 2 2 2 2 0 2 0 2 2 2
[186] 2 0 2 2 2 2 0 2 0 2 2 2 2 2 2
Means:
             C 1       C 2
Length   214.998 214.78095
Ht_Left  129.945 130.26429
Ht_Right 129.732 130.17976
IF_Lower   8.311  10.85714
IF_Upper  10.193  11.10833
Diagonal 141.470 139.62381

Trimmed objective function:  -544.8411 
Selected restriction factor: 50 
> 
> # Three clusters and 0% trimming level
> (clus <- tclust(swissbank, k = 3, alpha = 0.0, restr.fact = 110))
* Results for TCLUST algorithm: *
trim = 0, k = 3
Classification (trimmed points are indicated by 0 ):
  [1] 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1
 [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3
[112] 2 2 2 2 3 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 3 2 2 2 2 2 2 2 2 2 3
[149] 2 2 2 2 2 2 2 2 2 2 2 3 3 3 2 2 2 2 3 3 2 2 3 2 2 2 2 2 2 2 2 3 2 3 2 2 2
[186] 2 3 2 2 2 2 3 2 3 2 2 2 2 2 2
Means:
               C 1       C 2        C 3
Length   214.97143 214.78095 215.022222
Ht_Left  129.92959 130.26429 130.500000
Ht_Right 129.70102 130.17976 130.305556
IF_Lower   8.30102  10.85714   8.777778
IF_Upper  10.16224  11.10833  11.172222
Diagonal 141.54184 139.62381 138.733333

Trimmed objective function:  -627.1889 
Selected restriction factor: 110 
> 
> ##### Discriminant Factor Analysis for tclust Objects ####################
> sig <- diag (2)
> cen <- rep (1, 2)
> x <- rbind(MASS::mvrnorm(360, cen * 0,   sig),
+ 	       MASS::mvrnorm(540, cen * 5,   sig * 6 - 2),
+ 	       MASS::mvrnorm(100, cen * 2.5, sig * 50)
+ )
> (clus.1 <- tclust(x, k = 2, alpha = 0.1, restr.fact = 12))
* Results for TCLUST algorithm: *
trim = 0.1, k = 2
Classification (trimmed points are indicated by 0 ):
   [1] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 0 2 2
  [38] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
  [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [112] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [149] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [186] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [223] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [260] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 0 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [297] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
 [334] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 0 1
 [371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [408] 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [445] 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1
 [482] 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [556] 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1
 [593] 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1
 [630] 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [667] 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [704] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [741] 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [778] 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1
 [815] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1
 [852] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [889] 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0
 [926] 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 1 0 0 0 1 2 0 0 1 0 1 0 0 0 0
 [963] 2 0 2 0 1 1 2 0 0 1 1 0 0 2 0 0 0 2 0 2 0 0 0 0 1 0 0 0 1 0 0 0 0 0 2 0 0
[1000] 0
Means:
         C 1         C 2
X 1 4.944642 -0.04331001
X 2 5.125260  0.07786115

Trimmed objective function:  -3764.373 
Selected restriction factor: 12 
> 
> (clus.2 <- tclust(x, k = 3, alpha = 0.1, restr.fact = 1))
* Results for TCLUST algorithm: *
trim = 0.1, k = 3
Classification (trimmed points are indicated by 0 ):
   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [223] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [334] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 3 2 3 3 3 2 0 2
 [371] 3 3 3 2 3 3 2 3 2 2 3 2 3 2 3 2 2 3 0 2 3 3 2 2 3 2 3 2 3 2 2 3 3 2 2 2 3
 [408] 2 3 3 3 2 3 2 2 3 3 3 0 3 2 2 3 2 2 3 3 3 2 3 2 3 3 2 3 2 3 3 3 3 3 3 2 2
 [445] 2 2 0 0 3 3 2 3 2 3 2 3 2 3 2 3 2 3 2 2 2 2 3 3 2 2 3 2 3 3 3 0 2 3 2 2 3
 [482] 2 3 1 3 2 2 3 2 2 2 0 3 2 2 3 3 2 2 3 3 3 2 2 3 0 3 3 3 3 3 2 3 3 3 2 3 2
 [519] 3 2 3 3 2 2 2 3 0 3 2 2 2 2 3 3 3 2 2 3 2 2 2 3 2 0 3 3 2 2 2 2 3 2 2 3 3
 [556] 3 0 3 3 0 0 2 3 3 3 2 3 2 3 3 3 2 2 2 3 3 2 2 0 3 3 3 2 3 2 3 2 0 3 2 2 3
 [593] 2 3 0 2 3 3 2 2 2 3 3 2 2 2 2 2 3 2 3 2 2 3 2 3 0 3 3 3 2 3 3 2 2 3 2 0 2
 [630] 2 2 2 2 3 3 3 3 3 2 0 2 3 2 3 2 2 2 3 3 3 3 3 2 3 2 2 3 2 2 2 2 2 2 3 2 2
 [667] 2 3 2 3 3 3 3 3 0 2 3 0 3 2 2 2 2 3 3 2 3 2 2 3 3 2 2 2 3 3 2 3 3 3 3 3 3
 [704] 3 3 0 2 2 3 3 3 2 2 3 3 3 3 2 3 3 2 3 2 3 3 2 1 3 3 2 3 3 3 2 3 2 2 2 2 3
 [741] 2 3 2 2 3 2 2 2 2 3 2 2 0 2 2 2 3 2 3 2 2 3 2 2 3 3 3 3 3 3 2 2 3 3 2 2 0
 [778] 2 3 2 2 2 3 2 3 1 3 3 3 2 2 3 3 3 3 2 3 3 2 2 2 2 2 3 2 2 3 0 2 2 2 2 3 2
 [815] 2 2 2 0 2 2 2 2 2 2 2 3 3 2 2 2 3 3 3 2 2 3 2 2 2 3 3 2 2 2 2 2 3 1 2 2 3
 [852] 2 2 2 3 2 2 3 0 2 2 2 2 3 3 2 3 2 3 2 2 2 3 2 3 3 3 2 3 2 2 3 3 3 2 3 2 3
 [889] 3 2 2 3 2 2 3 3 2 2 2 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 2 0 0 3 0 0 0 0 0 0
 [926] 0 0 0 0 0 0 0 0 0 0 0 2 0 0 2 0 0 3 0 0 0 2 2 0 0 0 2 1 0 0 2 0 1 1 0 0 0
 [963] 1 0 1 0 2 2 1 0 0 2 3 0 0 1 0 0 0 1 0 1 0 0 0 0 2 0 0 0 2 0 0 0 1 0 1 0 0
[1000] 0
Means:
            C 1      C 2      C 3
X 1 -0.03094984 3.834955 6.218532
X 2  0.13148330 6.408800 3.631850

Trimmed objective function:  -3852.612 
Selected restriction factor: 1 
>   ##  restr.fact and k are chosen improperly for pointing out the
>   ##    difference in the plot of DiscrFact
> 
> (dsc.1 <- DiscrFact(clus.1))
Mean overall discriminant factor: -21.96625 
Mean discriminant factor per cluster:
        O         1         2 
-16.01511 -29.03675 -13.27628 
38 decisions are considered as doubtful
> (dsc.2 <- DiscrFact(clus.2))
Mean overall discriminant factor: -10.89956 
Mean discriminant factor per cluster:
         O          1          2          3 
-18.330737 -17.615898  -4.741228  -4.521998 
159 decisions are considered as doubtful
> 
> 
> ########## Classification Trimmed Likelihood Curves  ###################
> 
> ## Do not run - it takes too long and can show differences on some
> ##  architectures due to the random numbers.
> ##
> #--- EXAMPLE 1 ------------------------------------------
> 
>     sig <- diag (2)
>     cen <- rep (1, 2)
>     x <- rbind(MASS::mvrnorm(108, cen * 0,   sig),
+     	       MASS::mvrnorm(162, cen * 5,   sig * 6 - 2),
+     	       MASS::mvrnorm(30, cen * 2.5, sig * 50)
+     )
> 
>     (ctl <- ctlcurves(x, k = 1:4))
Depending on arguments x, k and alpha, this function needs some time to compute.
(Remove this message by setting "trace = 0")
Computed 24 solutions (chosen restr.fact = 50).

   alpha
k   0 0.04 0.08 0.12 0.16 0.2
  1                          
  2                          
  3 *                *    *  
  4 *                        

(*) Identified 4 artificially restricted solutions.
> 
> #--- EXAMPLE 2 ------------------------------------------
> 
> data (geyser2)
> (ctl <- ctlcurves(geyser2, k = 1:5))
Depending on arguments x, k and alpha, this function needs some time to compute.
(Remove this message by setting "trace = 0")
Computed 30 solutions (chosen restr.fact = 50).

   alpha
k   0 0.04 0.08 0.12 0.16 0.2
  1                          
  2                          
  3                          
  4                       *  
  5        *                 

(*) Identified 2 artificially restricted solutions.
> 
> proc.time()
   user  system elapsed 
   1.87    0.12   18.90 
